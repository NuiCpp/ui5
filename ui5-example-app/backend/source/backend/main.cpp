#include <nui/core.hpp>
#include <nui/window.hpp>
#include <roar/mime_type.hpp>

// This file is generated by nui.
#include <index.hpp>

#include <filesystem>
#include <iostream>
#include <fstream>

int main(int, char** argv)
{
    using namespace Nui;
    using namespace std::string_literals;

    std::filesystem::path programDir = std::filesystem::path(argv[0]).parent_path();

    CustomScheme scheme{
        .scheme = "nui"s,
        .allowedOrigins = {"*"s},
        .onRequest =
            [programDir](CustomSchemeRequest const& request) {
                // Check if file exists and return 404 if not
                const auto file =
                    programDir / "assets" / std::filesystem::relative(request.parseUrl()->pathAsString(), "/");

                if (!std::filesystem::exists(file))
                {
                    return CustomSchemeResponse{
                        .statusCode = 404,
                        .reasonPhrase = "Not Found",
                        .headers =
                            {
                                {"Content-Type"s, "text/plain"s},
                                // Do not forget to allow CORS
                                {"Access-Control-Allow-Origin"s, "*"s},
                            },
                        .body = "Not Found",
                    };
                }

                // Read file
                std::ifstream reader{file, std::ios::binary};
                reader.seekg(0, std::ios::end);
                std::string content(reader.tellg(), '\0');
                reader.seekg(0, std::ios::beg);
                reader.read(&content[0], content.size());

                // Get mime type
                const std::string mime =
                    Roar::extensionToMime(file.extension().string()).value_or("application/octet-stream");

                // Return file
                return CustomSchemeResponse{
                    .statusCode = content.empty() ? 204 : 200,
                    .reasonPhrase = "OK",
                    .headers =
                        {
                            {"Content-Type"s, mime},
                            // Do not forget to allow CORS
                            {"Access-Control-Allow-Origin"s, "*"s},
                        },

                    // Currently there is no streaming way to write the body, if its large.
                    .body = content,
                };
            },

        // Windows: Is this secure like https (not http)? A lot of things are not allowed in http.
        .treatAsSecure = true,

        // Windows: Do urls to this custom scheme have an authority component? (For portability reasons, they usually
        // should have).
        .hasAuthorityComponent = true,
    };

    Window window{WindowOptions{
        .title = "Nui"s,
        .debug = true /* may open dev tools */,
        .customSchemes = {scheme},
    }};
    window.setSize(1600, 950, WebViewHint::WEBVIEW_HINT_NONE);
    window.setHtml(index());

    window.run();
}